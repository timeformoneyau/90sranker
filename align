// align.js
function alignScreen() {
  const img = new Image();
  img.src = 'theater-bg1.png';  // <-- make sure this matches your CSS file name
  img.onload = () => {
    const w = window.innerWidth, h = window.innerHeight;
    const canvas = document.createElement('canvas');
    canvas.width = w; canvas.height = h;
    const ctx = canvas.getContext('2d');

    // draw CSS‑cover image into canvas
    const scale = Math.max(w/img.width, h/img.height);
    const sw = img.width * scale, sh = img.height * scale;
    const sx = (w - sw)/2, sy = (h - sh)/2;
    ctx.drawImage(img, sx, sy, sw, sh);

    // sample brightness on center scanline
    const data = ctx.getImageData(0, h/2, w, 1).data;
    let left = 0, right = w - 1;
    const TH = 100;
    for (; left < w; left++) {
      const b = (data[left*4] + data[left*4+1] + data[left*4+2]) / 3;
      if (b > TH) break;
    }
    for (; right > 0; right--) {
      const b = (data[right*4] + data[right*4+1] + data[right*4+2]) / 3;
      if (b > TH) break;
    }

    const screen = document.querySelector('.vr-screen');
    if (screen && left < right) {
      // compute vw units
      const lvw = (left / w)*100, wvw = ((right - left)/w)*100;
      screen.style.left  = `${lvw}vw`;
      screen.style.width = `${wvw}vw`;
      // keep the transform there
      screen.style.transform = 'translate(-50%,-50%) perspective(1200px) rotateX(5deg)';
    }
  };
}

// run at load, re‑run on resize
window.addEventListener('load',  alignScreen);
window.addEventListener('resize', () => {
  clearTimeout(window._alignTO);
  window._alignTO = setTimeout(alignScreen, 150);
});
